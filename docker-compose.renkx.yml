version: "3"

networks:
  default:
    ipam:
      config:
        - subnet: ${DEFAULT_SUBNET}

services:
  nginx:
    build:
      context: .
      dockerfile: ./renkxservices/nginx/Dockerfile
      args:
        NGINX_VERSION: nginx:${NGINX_VERSION}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
    container_name: nginx
    hostname: nginx
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/www/
      - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf
      - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf
      - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params
      - ${NGINX_LOG_DIR}:/var/log/nginx/
    environment:
      TZ: "$TZ"
    restart: always
    networks:
      default:
        ipv4_address: ${NGINX_IPV4}

  php:
    image: registry.cn-beijing.aliyuncs.com/renkx/php:${PHP_DNMP_IMAGE}
    container_name: php
    hostname: php
    working_dir: /www
    volumes:
      - ${SOURCE_DIR}:/www/
      - ${SYS_DIR}:/renkxsys/
      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf
      - ${PHP_LOG_DIR}:/var/log/php
      - ${COMPOSER_CACHE_DIR}:/tmp/composer/cache
      - ${COMPOSER_AUTH_JSON}:/tmp/composer/auth.json
      - ${COMPOSER_CONFIG_JSON}:/tmp/composer/config.json
      - ${ROOT_GITCONFIG_FILE}:/root/.gitconfig
      - ${ROOT_SSH_DIR}:/root/.ssh
    extra_hosts:
      - "${DOMAIN_JDJSJAPI}:${NGINX_IPV4}"
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  #  php:
  #    build:
  #      context: .
  #      dockerfile: ./renkxservices/php/Dockerfile
  #      args:
  #        PHP_VERSION: php:${PHP_VERSION}-fpm-alpine
  #        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
  #        PHP_EXTENSIONS: ${PHP_EXTENSIONS}
  #        TZ: "$TZ"
  #    container_name: php
  #    hostname: php
  #    volumes:
  #      - ${SOURCE_DIR}:/www/
  #      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini
  #      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf
  #      - ${PHP_LOG_DIR}:/var/log/php
  #      - ${COMPOSER_CACHE_DIR}:/tmp/composer/cache
  #      - ${COMPOSER_AUTH_JSON}:/tmp/composer/auth.json
  #      - ${COMPOSER_CONFIG_JSON}:/tmp/composer/config.json
  #      - ${ROOT_GITCONFIG_FILE}:/root/.gitconfig
  #      - ${ROOT_SSH_DIR}:/root/.ssh
  #    restart: always
  #    cap_add:
  #      - SYS_PTRACE
  #    networks:
  #     - default

  crontab:
    image: registry.cn-beijing.aliyuncs.com/renkx/php:${PHP_DNMP_IMAGE}
    container_name: crontab
    hostname: crontab
    working_dir: /www
    volumes:
      - ${SOURCE_DIR}:/www/
      - ${SYS_DIR}:/renkxsys/
      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf
      - ${CRONTAB_PHP_LOG_DIR}:/var/log/php
      - ${CRONTAB_ROOT_FILE}:/etc/crontabs/root
    restart: always
    cap_add:
      - SYS_PTRACE
    command: ["/usr/sbin/crond", "-f"]
    networks:
      - default

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    hostname: mysql
    # 运行实例的用户，如果不设置，mac-box-docker模式下共享和挂载同一个目录 mysql会报错
    #user: "1000:50"
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf
      - ${DATA_DIR}/mysql8:/var/lib/mysql/
    restart: always
    networks:
      - default
    # 如果不设置，mac-box-docker模式下共享和挂载同一个目录 mysql会报错
    #command: --innodb-use-native-aio=0
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      TZ: "$TZ"

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    hostname: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf
      # vagrant报错情况：不开持久化，挂载data目录 docker整体崩溃
      #- ${DATA_DIR}/redis:/data/:rw
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    environment:
      TZ: "$TZ"
    networks:
      - default

  mongodb:
    image: mongo
    container_name: mongodb
    hostname: mongodb
    restart: always
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - ${DATA_DIR}/mongodb:/data/db/
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_USER}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASS}"
    networks:
      - default

  frpc:
    build:
      context: ./renkxservices/frp
      args:
        FRP_VERSION: "${FRP_VERSION}"
        TZ: "$TZ"
    container_name: frpc
    hostname: frpc
    restart: always
    volumes:
      - ${FRPC_CONF_DIR}/frpc.ini:/frpc.ini
      - ${FRPC_CONF_DIR}/conf:/conf
    command: /frp/frpc -c /frpc.ini
    networks:
      - default

  bbwws:
    image: oanhnn/laravel-echo-server:${LARAVEL_ECHO_SERVER_VERSION}
    container_name: bbwws
    hostname: bbwws
    restart: always
    tty: true
    stdin_open: true
    volumes:
      - ${BBWWS_CONF_JSON}:/app/laravel-echo-server.json
    extra_hosts:
      - "${DOMAIN_BBWAPI}:${NGINX_IPV4}"
    healthcheck:
      test: /usr/local/bin/health-check
      start_period: 5s
      interval: 3s
      timeout: 3s
      retries: 10
    networks:
      - default

  bbwtdtws:
    image: oanhnn/laravel-echo-server:${LARAVEL_ECHO_SERVER_VERSION}
    container_name: bbwtdtws
    hostname: bbwtdtws
    restart: always
    tty: true
    stdin_open: true
    volumes:
      - ${BBWTDTWS_CONF_JSON}:/app/laravel-echo-server.json
    extra_hosts:
      - "${DOMAIN_BBWAPI}:${NGINX_IPV4}"
    healthcheck:
      test: /usr/local/bin/health-check
      start_period: 5s
      interval: 3s
      timeout: 3s
      retries: 10
    networks:
      - default

  jdjsjws:
    image: oanhnn/laravel-echo-server:${LARAVEL_ECHO_SERVER_VERSION}
    container_name: jdjsjws
    hostname: jdjsjws
    restart: always
    tty: true
    stdin_open: true
    volumes:
      - ${JDJSJWS_CONF_JSON}:/app/laravel-echo-server.json
    extra_hosts:
      - "${DOMAIN_JDJSJAPI}:${NGINX_IPV4}"
    healthcheck:
      test: /usr/local/bin/health-check
      start_period: 5s
      interval: 3s
      timeout: 3s
      retries: 10
    networks:
      - default

  supervisor:
    image: registry.cn-beijing.aliyuncs.com/renkx/php:${PHP_DNMP_IMAGE}
    container_name: supervisor
    hostname: supervisor
    working_dir: /etc/supervisor/conf.d
    volumes:
      - ${SOURCE_DIR}:/www/
      - ${SYS_DIR}:/renkxsys/
      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf
      - ${SUPERVISOR_PHP_LOG_DIR}:/var/log/php
      - ${SUPERVISOR_LOG}:/var/log/supervisor/
      - ${SUPERVISOR_CONFIG}:/etc/supervisor/conf.d/
      - ${SUPERVISOR_CONF_FILE}:/etc/supervisor/supervisord.conf
    restart: always
    cap_add:
      - SYS_PTRACE
    command: ["supervisord", "--nodaemon", "--configuration", "/etc/supervisor/supervisord.conf"]
    networks:
      - default

  #  supervisor:
  #    build:
  #      context: .
  #      dockerfile: ./renkxservices/supervisor/Dockerfile
  #      args:
  #        PHP_VERSION: php:${PHP_VERSION}-fpm-alpine
  #        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
  #        PHP_EXTENSIONS: ${PHP_EXTENSIONS}
  #        TZ: "$TZ"
  #    container_name: supervisor
  #    hostname: supervisor
  #    volumes:
  #      - ${SOURCE_DIR}:/www/:rw
  #      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
  #      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
  #      - ${SUPERVISOR_PHP_LOG_DIR}:/var/log/php
  #      - ${SUPERVISOR_LOG}:/var/log/supervisor/:rw
  #      - ${SUPERVISOR_CONFIG}:/etc/supervisor/conf.d/:rw
  #      - ${SUPERVISOR_CONF_FILE}:/etc/supervisor/supervisord.conf:ro
  #      - ${SUPERVISOR_CRONTAB_ROOT_FILE}:/etc/crontabs/root
  #    restart: always
  #    cap_add:
  #      - SYS_PTRACE
  #    networks:
  #      - default

  node:
    image: "registry.cn-beijing.aliyuncs.com/renkx/node:0.1"
    container_name: node
    hostname: node
    working_dir: /www
    restart: always
    tty: true
    stdin_open: true
    volumes:
      - ${SOURCE_DIR}:/www/
      - ${ROOT_GITCONFIG_FILE}:/root/.gitconfig
      - ${ROOT_SSH_DIR}:/root/.ssh
      - ${ROOT_OH_MY_ZSH}:/root/.oh-my-zsh
      - ${ROOT_ZSHRC_FILE}:/root/.zshrc
    networks:
      - default